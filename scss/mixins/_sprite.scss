// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$camera-name: 'camera';
$camera-x: 211px;
$camera-y: 0px;
$camera-offset-x: -211px;
$camera-offset-y: 0px;
$camera-width: 217px;
$camera-height: 125px;
$camera-total-width: 428px;
$camera-total-height: 408px;
$camera-image: 'sprite.png';
$camera: (211px, 0px, -211px, 0px, 217px, 125px, 428px, 408px, '../img/sprite.png', 'camera', );
$computer-name: 'computer';
$computer-x: 0px;
$computer-y: 0px;
$computer-offset-x: 0px;
$computer-offset-y: 0px;
$computer-width: 206px;
$computer-height: 186px;
$computer-total-width: 428px;
$computer-total-height: 408px;
$computer-image: 'sprite.png';
$computer: (0px, 0px, 0px, 0px, 206px, 186px, 428px, 408px, '../img/sprite.png', 'computer', );
$headphones-name: 'headphones';
$headphones-x: 0px;
$headphones-y: 191px;
$headphones-offset-x: 0px;
$headphones-offset-y: -191px;
$headphones-width: 131px;
$headphones-height: 134px;
$headphones-total-width: 428px;
$headphones-total-height: 408px;
$headphones-image: 'sprite.png';
$headphones: (0px, 191px, 0px, -191px, 131px, 134px, 428px, 408px, '../img/sprite.png', 'headphones', );
$social-1-name: 'social-1';
$social-1-x: 136px;
$social-1-y: 191px;
$social-1-offset-x: -136px;
$social-1-offset-y: -191px;
$social-1-width: 78px;
$social-1-height: 78px;
$social-1-total-width: 428px;
$social-1-total-height: 408px;
$social-1-image: 'sprite.png';
$social-1: (136px, 191px, -136px, -191px, 78px, 78px, 428px, 408px, '../img/sprite.png', 'social-1', );
$social-2-name: 'social-2';
$social-2-x: 219px;
$social-2-y: 191px;
$social-2-offset-x: -219px;
$social-2-offset-y: -191px;
$social-2-width: 78px;
$social-2-height: 78px;
$social-2-total-width: 428px;
$social-2-total-height: 408px;
$social-2-image: 'sprite.png';
$social-2: (219px, 191px, -219px, -191px, 78px, 78px, 428px, 408px, '../img/sprite.png', 'social-2', );
$social-3-name: 'social-3';
$social-3-x: 302px;
$social-3-y: 191px;
$social-3-offset-x: -302px;
$social-3-offset-y: -191px;
$social-3-width: 78px;
$social-3-height: 78px;
$social-3-total-width: 428px;
$social-3-total-height: 408px;
$social-3-image: 'sprite.png';
$social-3: (302px, 191px, -302px, -191px, 78px, 78px, 428px, 408px, '../img/sprite.png', 'social-3', );
$social-4-name: 'social-4';
$social-4-x: 0px;
$social-4-y: 330px;
$social-4-offset-x: 0px;
$social-4-offset-y: -330px;
$social-4-width: 78px;
$social-4-height: 78px;
$social-4-total-width: 428px;
$social-4-total-height: 408px;
$social-4-image: 'sprite.png';
$social-4: (0px, 330px, 0px, -330px, 78px, 78px, 428px, 408px, '../img/sprite.png', 'social-4', );
$social-5-name: 'social-5';
$social-5-x: 83px;
$social-5-y: 330px;
$social-5-offset-x: -83px;
$social-5-offset-y: -330px;
$social-5-width: 78px;
$social-5-height: 78px;
$social-5-total-width: 428px;
$social-5-total-height: 408px;
$social-5-image: 'sprite.png';
$social-5: (83px, 330px, -83px, -330px, 78px, 78px, 428px, 408px, '../img/sprite.png', 'social-5', );
$spritesheet-width: 428px;
$spritesheet-height: 408px;
$spritesheet-image: 'sprite.png';
$spritesheet-sprites: ($camera, $computer, $headphones, $social-1, $social-2, $social-3, $social-4, $social-5, );
$spritesheet: (428px, 408px, 'sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
